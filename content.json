{"meta":{"title":"Sakura'Road 樱道","subtitle":"Blog","description":"Just","author":"Ruoli","url":"http://www.rlya.site","root":"/"},"pages":[{"title":"友链","date":"2022-09-06T08:55:12.000Z","updated":"2023-02-20T06:57:36.049Z","comments":true,"path":"friends/index.html","permalink":"http://www.rlya.site/friends/index.html","excerpt":"","text":""},{"title":"","date":"2022-09-06T09:06:04.603Z","updated":"2022-09-06T09:06:04.603Z","comments":true,"path":"404.html","permalink":"http://www.rlya.site/404.html","excerpt":"","text":"404 很抱歉，您访问的页面不存在 可能是输入地址有误或该地址已被删除"},{"title":"Help","date":"2022-09-10T06:05:55.000Z","updated":"2022-09-10T06:06:27.069Z","comments":true,"path":"help/index.html","permalink":"http://www.rlya.site/help/index.html","excerpt":"","text":"联系方式：QQ：1781681230"},{"title":"Faqs","date":"2022-09-10T06:07:41.000Z","updated":"2022-09-10T06:09:02.880Z","comments":true,"path":"Faqs/index.html","permalink":"http://www.rlya.site/Faqs/index.html","excerpt":"","text":"脚本若用于商业用途 后果请自负"}],"posts":[{"title":"《YOLOv8》将VOC格式数据集转为YOLO格式数据集工具","slug":"《YOLOv8》将VOC格式数据集转为YOLO格式数据集工具","date":"2023-11-24T00:14:57.000Z","updated":"2023-11-24T01:06:10.603Z","comments":true,"path":"2023/11/24/《YOLOv8》将VOC格式数据集转为YOLO格式数据集工具/","link":"","permalink":"http://www.rlya.site/2023/11/24/%E3%80%8AYOLOv8%E3%80%8B%E5%B0%86VOC%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE%E9%9B%86%E8%BD%AC%E4%B8%BAYOLO%E6%A0%BC%E5%BC%8F%E6%95%B0%E6%8D%AE%E9%9B%86%E5%B7%A5%E5%85%B7/","excerpt":"","text":"事件背景在YOLOv8学习过程中 找到了IP102数据集 但是发现数据集为VOC格式 需要自己转换为YOLO格式，一万多张图片，肯定是不可能用手一张一张转的，所以使用了Python来编写一个小程序达到这个效果。 准备 Python Pycharm lxml 需要自己安装 pip install lxml VOC格式的数据集 实现在操作之前 我们首先要知道VOC格式的数据集是XML文件 其中哪些东西是转换为YOLO格式所需要的 让我们先打开XML文件看一看 width - 图像宽度 height - 图像高度 name - 类别 bndbox&#x2F;xmin - 左上坐标 bndbox&#x2F;ymin - 左上坐标 bndbox&#x2F;xmax - 右下坐标 bndbox&#x2F;ymax - 右下坐标 但是在YOLO格式中注解的表达并不是这样的 x_cneter - 归一化坐标 y_center - 归一化坐标 width - 宽度比例 height - 高度比例它们的转换公式如下1234x_center = (xmin + xmax) / (2.0 * image_width)y_center = (ymin + ymax) / (2.0 * image_height)width = (xmax - xmin) / image_widthheight = (ymax - ymin) / image_height 注意 上面image_width以及image_height指的是XML格式中的width以及height接下来就只需要使用XML对文件进行标签的查找、取值、计算再输出就好了XML的使用就不再演示使用OS进行文件的输出也不再演示完整代码如下：1234567891011121314151617181920212223242526272829303132333435363738394041424344454647import xml.etree.ElementTree as Etimport osimport shutildef convert_into_yolo(xml_path, txt_path): xml_files = os.listdir(xml_path) os.chdir(xml_path) for xml_name in xml_files: if xml_name[-3::] == &quot;txt&quot;: shutil.copy2(os.path.join(xml_path, xml_name), os.path.join(txt_path, xml_name)) continue convert_single_into_yolo(xml_name, txt_path)def convert_single_into_yolo(xml_name, txt_path): # print(xml_file) # 定义输出路径 out_txt_file_path = os.path.join(txt_path, xml_name.split(&#x27;.&#x27;)[0] + &#x27;.txt&#x27;) tree = Et.parse(xml_name) root = tree.getroot() # 寻找指定值并进行计算 name = root.find(&#x27;object&#x27;).find(&#x27;name&#x27;).text image_width = root.find(&#x27;size&#x27;).find(&#x27;width&#x27;).text image_height = root.find(&#x27;size&#x27;).find(&#x27;height&#x27;).text xmin = root.find(&#x27;object&#x27;).find(&#x27;bndbox&#x27;).find(&#x27;xmin&#x27;).text ymin = root.find(&#x27;object&#x27;).find(&#x27;bndbox&#x27;).find(&#x27;ymin&#x27;).text xmax = root.find(&#x27;object&#x27;).find(&#x27;bndbox&#x27;).find(&#x27;xmax&#x27;).text ymax = root.find(&#x27;object&#x27;).find(&#x27;bndbox&#x27;).find(&#x27;ymax&#x27;).text x_center = round((float(xmin) + float(xmax)) / (2.0 * float(image_width)), 2) # YOLO格式的归一化坐标 y_center = round((float(ymin) + float(ymax)) / (2.0 * float(image_height)), 2) # YOLO格式的归一化坐标 width = round((float(xmax) - float(xmin)) / float(image_width), 2) # 边界框宽度对于图像宽度的比例 height = round((float(ymax) - float(ymin)) / float(image_height), 2) # 边界框高度对于图像高度的比例 # print(name, image_width, image_height, xmin, ymin, xmax, ymax) # 原始数据 # print(name, width, height, x_center, y_center) # 处理后的数据 # 写出数据 with open(out_txt_file_path, &quot;w&quot;) as fp: fp.write(&quot;&#123;&#125; &#123;&#125; &#123;&#125; &#123;&#125;&quot;.format(name, x_center, y_center, width, height))if __name__ == &#x27;__main__&#x27;: # XML文件存放地址 xml_path = r&quot;XML文件夹地址&quot; # TXT文件存放地址 txt_path = r&quot;TXT文件夹地址&quot; convert_into_yolo(xml_path, txt_path)","categories":[],"tags":[{"name":"yolov8","slug":"yolov8","permalink":"http://www.rlya.site/tags/yolov8/"}]},{"title":"使用Python程序实现批改网的\"复制粘贴\"","slug":"使用Python程序实现批改网的-复制粘贴","date":"2023-10-21T07:00:45.000Z","updated":"2023-11-24T01:08:31.047Z","comments":true,"path":"2023/10/21/使用Python程序实现批改网的-复制粘贴/","link":"","permalink":"http://www.rlya.site/2023/10/21/%E4%BD%BF%E7%94%A8Python%E7%A8%8B%E5%BA%8F%E5%AE%9E%E7%8E%B0%E6%89%B9%E6%94%B9%E7%BD%91%E7%9A%84-%E5%A4%8D%E5%88%B6%E7%B2%98%E8%B4%B4/","excerpt":"","text":"事件背景源于批改网让人痛恨的禁止“复制粘贴” 所以上百度搜索了一下 原本想看看能不能找个脚本 没想到发现了一个新思路：使用Python模拟键盘输入来达到粘贴的效果 代码实现from pynput.keyboard import Controller import time key = input(&#39;请确认已经将文本放在了data记事本内！确认后请敲击回车！&#39;) for i in range(5): print(&#39;程序还有%s秒启动&#39; % (5 - i)) time.sleep(1) f = open(&#39;data.txt&#39;, &#39;r&#39;) data = f.read() f.close() keyboard = Controller() for i in data: keyboard.type(i) 思路十分简单，实现也比较容易 使用方法使用Python编译器运行该代码，并将要输入的作文内容放在与该py文件同目录下的data.txt文件 敲回车确认启动后将光标移到批改网文本框内即可 由于部分人可能没有Python环境，所以我将该文件打包为exe可执行文件了 下载链接如下：https://gitee.com/RuoliCloud/Ruolicloud.github.io/raw/master/pigaiwang.exe","categories":[],"tags":[{"name":"Python","slug":"Python","permalink":"http://www.rlya.site/tags/Python/"}]},{"title":"AI代码编写--AWS Codewhisper安装","slug":"AI代码编写-AWS-Codewhisper安装","date":"2023-08-30T11:56:23.000Z","updated":"2023-11-24T01:09:07.791Z","comments":true,"path":"2023/08/30/AI代码编写-AWS-Codewhisper安装/","link":"","permalink":"http://www.rlya.site/2023/08/30/AI%E4%BB%A3%E7%A0%81%E7%BC%96%E5%86%99-AWS-Codewhisper%E5%AE%89%E8%A3%85/","excerpt":"","text":"事件背景因学习途中被介绍了Colipot用于自动完善代码 看完效果认为十分有效 但是 由于Colipot需要付费 所以不得不转向来自AWS的类似工具—AWS Codewhisper 安装过程VSCODE的安装我认为VSCODE的安装应该不需要介绍 所以我们直接跳过 AWS Codewhisper的安装插件安装十分简单 在VScode扩展安装中直接搜索 AWS Toolkit 即可安装安装后在VScode的左侧会出现AWS的logo 点进去 再点击 CodeWhisper 下拉列表中会出现一个start按钮 点击start开始后 在VScode顶端会出现三个选项Use a personal email to sign up and sign in with AWS Builder ID字面意思使用个人邮件进行注册 点击后会出现两个弹窗 第一个弹窗是让我们复制一个代码 第二个弹窗是打开AWS官网 打开后填写 Code 就完成了 如果没有AWS账号的话 填写自己的邮箱 AWS会引导我们进行注册 一系列操作完成后 回到VScode中 继续点击上述中start的即可开始享用Codewhisper工具","categories":[],"tags":[{"name":"Miscellaneous","slug":"Miscellaneous","permalink":"http://www.rlya.site/tags/Miscellaneous/"}]},{"title":"Nginx+Uwsgi+Django部署","slug":"Nginx-Uwsgi-Django部署","date":"2023-03-03T00:45:50.000Z","updated":"2023-11-24T01:08:20.696Z","comments":true,"path":"2023/03/03/Nginx-Uwsgi-Django部署/","link":"","permalink":"http://www.rlya.site/2023/03/03/Nginx-Uwsgi-Django%E9%83%A8%E7%BD%B2/","excerpt":"","text":"学习Nginx+Uwsgi+Django项目部署到服务器一.Django只需将Django项目部署上去 修改settings.py等相关文件 二.Nginx1.Nginx安装（自动化）yum install nginx2.Nginx配置vi /etc/nginx/nginx.conf修改其中的’server’下的’location’为uwsgi_pass 127.0.0.1:81; 81为监听端口 可根据实际情况修改include /etc/nginx/uwsgi_params;3.Nginx相关操作(1)停止 重启nginx -s stop reload(2)启动nginx -c /etc/nginx/nginx.conf 三.Uwsgi1.Uwsgi安装（自动化）pip3 install uwsgi(确保安装为python3)到项目根目录中进行uwsgi的配置 uwsgi.inivi uwsgi.iniUwsgi.ini内容如下[uwsgi]socket=127.0.0.1:81 81为监听端口 需与上文nginx监听端口相同chdir=/home/studypidfile=uwsgi.piddaemonize=uwsgi.logwsgi-file=study/wsgi.pyprocess=4threads=2master=True","categories":[],"tags":[]},{"title":"在Centos8上安装Docker","slug":"在Centos8上安装Docker","date":"2023-02-26T06:46:30.000Z","updated":"2023-11-24T01:08:23.678Z","comments":true,"path":"2023/02/26/在Centos8上安装Docker/","link":"","permalink":"http://www.rlya.site/2023/02/26/%E5%9C%A8Centos8%E4%B8%8A%E5%AE%89%E8%A3%85Docker/","excerpt":"","text":"事件背景出于学习需要 尝试在Centos8上安装Docker并拉取Django进行部署 安装过程1.自动安装 curl -fsSL https://get.docker.com | bash -s docker --mirror Aliyun国内DaoCloud curl -sSL https://get.daocloud.io/docker | sh 2.手动安装安装Docker所需依赖：sudo yum install -y yum-utils device-mapper-persistent-data lvm2设置Docker仓库：（1）官方源 : yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo（2）阿里云 : yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo（3）清华大学 : yum-config-manager --add-repo https://mirrors.tuna.tsinghua.edu.cn/docker-ce/linux/centos/docker-ce.repo安装最新Docker：yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin 3.启动Dockersystemctl start docker 4.检测Docker是否正确安装docker run hello-world 5.结束","categories":[],"tags":[{"name":"Centos","slug":"Centos","permalink":"http://www.rlya.site/tags/Centos/"}]},{"title":"论解密加密音乐文件方法","slug":"论解密加密音乐文件方法","date":"2023-02-22T13:26:20.000Z","updated":"2023-11-24T01:08:57.416Z","comments":true,"path":"2023/02/22/论解密加密音乐文件方法/","link":"","permalink":"http://www.rlya.site/2023/02/22/%E8%AE%BA%E8%A7%A3%E5%AF%86%E5%8A%A0%E5%AF%86%E9%9F%B3%E4%B9%90%E6%96%87%E4%BB%B6%E6%96%B9%E6%B3%95/","excerpt":"","text":"前言在国内的音乐平台上下载VIP音乐基本都是需要开通会员 且下载之后的文件格式将会是加密的，例如某易的ncm Q某的qmc等 都需要在自家的音乐播放器当中开通会员才能够听 但是没有什么东西可以难住广大程序员 Github上就出现了一个解密这些音乐文件的开源项目 Unblock Music 支持将加密文件转换为mp3 但是 在国内 这种东西很难能够活下来 所以不出意外的 这个项目被DMCA了 所以如果需要使用这个工具的话 就得需要 大家自己踩梯子用了 项目PWA地址https://demo.unlock-music.dev/","categories":[],"tags":[{"name":"Miscellaneous","slug":"Miscellaneous","permalink":"http://www.rlya.site/tags/Miscellaneous/"}]},{"title":"腾讯推出Linux QQ 3.1.0测试版 已具有部分功能","slug":"腾讯推出Linux-QQ-3-1-0测试版-已具有部分功能","date":"2023-02-22T13:01:47.000Z","updated":"2023-11-24T01:09:00.466Z","comments":true,"path":"2023/02/22/腾讯推出Linux-QQ-3-1-0测试版-已具有部分功能/","link":"","permalink":"http://www.rlya.site/2023/02/22/%E8%85%BE%E8%AE%AF%E6%8E%A8%E5%87%BALinux-QQ-3-1-0%E6%B5%8B%E8%AF%95%E7%89%88-%E5%B7%B2%E5%85%B7%E6%9C%89%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD/","excerpt":"","text":"早在去年 腾讯就发布了Linux QQ的测试版本不过当时可能发布得稍微有一点着急 功能并不齐全但是在新发布的Linux QQ 3.1.0中已经具有了较多功能 但唯一比较遗憾的是项目仍处于测试阶段现在无法从Linux QQ官网进行下载 更新功能 支持多账号登录和管理 支持截图快捷键 新增好友管理器 支持调整字体大小 支持缩小最近会话列表的宽度 表情面板新增最近使用模块 QQ 群支持全员禁言和禁言单个群友 转发面板支持转发对象详情 转发支持带上内容详情并可以点击查看 下载地址请根据自己使用的系统和架构选择对应版本的安装包。 https://dldir1.qq.com/qqfile/qq/QQNT/c6032ac7/linuxqq_3.1.0-9332_aarch64.rpm https://dldir1.qq.com/qqfile/qq/QQNT/c6032ac7/linuxqq_3.1.0-9332_amd64.deb https://dldir1.qq.com/qqfile/qq/QQNT/c6032ac7/linuxqq_3.1.0-9332_arm64.AppImage https://dldir1.qq.com/qqfile/qq/QQNT/c6032ac7/linuxqq_3.1.0-9332_arm64.deb https://dldir1.qq.com/qqfile/qq/QQNT/c6032ac7/linuxqq_3.1.0-9332_loong64.deb https://dldir1.qq.com/qqfile/qq/QQNT/c6032ac7/linuxqq_3.1.0-9332_x86_64.AppImage https://dldir1.qq.com/qqfile/qq/QQNT/c6032ac7/linuxqq_3.1.0-9332_x86_64.rpm以上内容转载自蓝点网","categories":[],"tags":[{"name":"Miscellaneous","slug":"Miscellaneous","permalink":"http://www.rlya.site/tags/Miscellaneous/"}]},{"title":"纯IPV6服务器访问IPV4的解决方法","slug":"纯IPV6服务器访问IPV4的解决方法","date":"2023-02-20T06:37:04.000Z","updated":"2023-11-24T01:08:51.771Z","comments":true,"path":"2023/02/20/纯IPV6服务器访问IPV4的解决方法/","link":"","permalink":"http://www.rlya.site/2023/02/20/%E7%BA%AFIPV6%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%AE%BF%E9%97%AEIPV4%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/","excerpt":"","text":"事件背景在经过多次选择之后确定购买了JustHost的一个便宜VPS购买的时候并没有注意 到了ssh连接的时候发现 该VPS只有一个IPV6地址原本我以为并没有什么影响 直到我使用Putty进行连接后访问国内某云的OSS下载文件时报：Network is unreadch****什么的上百度搜了一下 发现应该是IPV6的DNS服务器没有设置好造成的需要重新设置DNS64 处理方法vi /etc/resolv.conf将其中的nameserver重新进行修改nameserver 2001:67c:2b0::4nameserver 2a00:1098:2c::1再次重试实测成功 下文为国外公共DNS64 芬兰/赫尔辛基 2a01:4f9:c010:3f02::1 芬兰/坦佩雷 2001:67c:2b0::4 芬兰/坦佩雷 2001:67c:2b0::6 德国/法兰克福 2a09:11c0:f1:bbf0::70 德国/纽伦堡 2a01:4f8:c2c:123f::1 斯洛文尼亚 2001:67c:27e4:15::6411 斯洛文尼亚 2001:67c:27e4::64 斯洛文尼亚 2001:67c:27e4:15::64 斯洛文尼亚 2001:67c:27e4::60 荷兰/阿姆斯特丹 2a00:1098:2b::1 荷兰/中部 2a03:7900:2:0:31:3:104:161 英国/伦敦 2a00:1098:2c::1","categories":[],"tags":[{"name":"Miscellaneous","slug":"Miscellaneous","permalink":"http://www.rlya.site/tags/Miscellaneous/"}]},{"title":"C语言中输出标识符","slug":"C语言中输出标识符","date":"2022-10-08T02:48:45.000Z","updated":"2022-11-20T14:37:37.579Z","comments":true,"path":"2022/10/08/C语言中输出标识符/","link":"","permalink":"http://www.rlya.site/2022/10/08/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E8%BE%93%E5%87%BA%E6%A0%87%E8%AF%86%E7%AC%A6/","excerpt":"","text":"供记录用1.%c：输出一个字符。c 是 character 的简写。2.%s：输出一个字符串。s 是 string 的简写。3,%f：输出一个小数。f 是 float 的简写。4.%hd：用来输出 short int 类型，hd 是 short decimal 的简写；5.%d：用来输出 int 类型，d 是 decimal 的简写；6.%ld：用来输出 long int 类型，ld 是 long decimal 的简写。7.%d 以十进制形式输出有符号数；8.%u 以十进制形式输出无符号数；9.%o 以八进制形式输出无符号数；10.%x 以十六进制形式输出无符号数。11.%p 以地址形式输出 会自带0x前缀。","categories":[],"tags":[]},{"title":"用VScode配置C/C++环境","slug":"用VScode配置C-C-环境","date":"2022-09-28T08:27:59.000Z","updated":"2023-11-24T01:09:04.666Z","comments":true,"path":"2022/09/28/用VScode配置C-C-环境/","link":"","permalink":"http://www.rlya.site/2022/09/28/%E7%94%A8VScode%E9%85%8D%E7%BD%AEC-C-%E7%8E%AF%E5%A2%83/","excerpt":"","text":"本文跳过MinGW下载安装 仅记录配置时问题1.首先VScode要安装C&#x2F;C++扩展（不进行详细讲解）2.在VScode中按ctrl+shift+p打开控制面板 搜索UI 点击C&#x2F;C++ configurations（UI）3.选择编译器路径4.IntelliSense模式选择windows-gcc-x645.按ctrl+shift+p搜索tasks 点击Configure Default Build Task 选择g++ 产生tasks.json6.按F5 进行调试 完毕 仅记录问题","categories":[],"tags":[{"name":"Miscellaneous","slug":"Miscellaneous","permalink":"http://www.rlya.site/tags/Miscellaneous/"}]},{"title":"天选3掉网卡解决办法","slug":"天选3掉网卡解决办法","date":"2022-09-07T01:17:20.000Z","updated":"2023-11-24T01:09:02.631Z","comments":true,"path":"2022/09/07/天选3掉网卡解决办法/","link":"","permalink":"http://www.rlya.site/2022/09/07/%E5%A4%A9%E9%80%893%E6%8E%89%E7%BD%91%E5%8D%A1%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/","excerpt":"","text":"天选3概率无线网卡掉网问题解决办法驱动下载 该驱动为22.160.0版本 更新内容中为提及网卡修复 但在22.150.0版本更新中提及 并在22.160.0版本中同样适用 如果不放心 可以14 15 16都安装已有网友测试成功修复该文章转自百度贴吧 作为记录发布","categories":[],"tags":[{"name":"Miscellaneous","slug":"Miscellaneous","permalink":"http://www.rlya.site/tags/Miscellaneous/"}]},{"title":"记Hexo博客搭建以来的部分细节问题","slug":"记Hexo博客搭建以来的部分细节问题","date":"2022-09-06T09:28:56.000Z","updated":"2022-09-06T09:44:43.133Z","comments":true,"path":"2022/09/06/记Hexo博客搭建以来的部分细节问题/","link":"","permalink":"http://www.rlya.site/2022/09/06/%E8%AE%B0Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%BB%A5%E6%9D%A5%E7%9A%84%E9%83%A8%E5%88%86%E7%BB%86%E8%8A%82%E9%97%AE%E9%A2%98/","excerpt":"","text":"经过多年荒废后 我打算重新搭建博客 在经历VPS的重重选择之后 朋友介绍了一个Hexo（原计划VPS+LNMP+Typecho） 百度了一下发现Hexo可以搭配github使用以达到免VPS的目的但是在搭建过程中遇到很多问题 首先遇到的问题就是Github在大陆的窘况 时不时就会出现连接不上的问题 所以朋友又给我介绍了Vercel 于是舍弃了Github Pages Git安装后的 用于Git上传时的问题在Git上传时可能会出现一个报错问题而且语言通俗易懂 大概就是：Please tell me who you are我一直没懂Git不是要上传时输入用户密码的吗 怎么还有这个 经过百度才发现Git是需要设置用户名和邮箱的git config --global user.name &quot;用户名&quot;git config --global user.email &quot;邮箱&quot;两个都更改后亲测错误消失 Git连接时网络正常但异常连接问题经百度 发现Github在2021年开始强制要求使用Token登录 所以Git连接的密码必须是Token而不是之前的登陆密码 获取Token方式可以自行百度 如果使用Vercel面临域名打不开问题Vercel的部分节点已经出现被墙的问题 所以在自定义域名的时候 解析记录需要解析到没有被墙的记录 详细可以百度到 这里仅供记录问题","categories":[],"tags":[]},{"title":"YUM源一键更换脚本","slug":"YUM源一键更换脚本","date":"2022-09-06T08:44:15.000Z","updated":"2023-11-24T01:08:09.932Z","comments":true,"path":"2022/09/06/YUM源一键更换脚本/","link":"","permalink":"http://www.rlya.site/2022/09/06/YUM%E6%BA%90%E4%B8%80%E9%94%AE%E6%9B%B4%E6%8D%A2%E8%84%9A%E6%9C%AC/","excerpt":"","text":"YUM源一键更换脚本 用于商业用途后果自负 若服务器位于国内 请使用托管于Gitee的脚本yum -y install wget &amp;&amp; wget https://gitee.com/RuoliCloud/YUMsh/raw/master/yum.sh -O yum.sh &amp;&amp; sh yum.sh 另外提供简易版本： yum -y install wget &amp;&amp; wget https://gitee.com/RuoliCloud/YUMsh/raw/master/yumcd.sh -O yumcd.sh &amp;&amp; sh yumcd.sh -X 若服务器位于国内 请使用托管于Github的脚本yum -y install wget &amp;&amp; wget https://raw.githubusercontent.com/Ruolicloud/YUMsh/master/yum.sh -O yum.sh &amp;&amp; sh yum.shFor X： 1.X&#x3D;A 阿里云2.X&#x3D;W 网易云3.X&#x3D;I Itzmx4.X&#x3D;R Return","categories":[],"tags":[{"name":"Centos","slug":"Centos","permalink":"http://www.rlya.site/tags/Centos/"}]}],"categories":[],"tags":[{"name":"yolov8","slug":"yolov8","permalink":"http://www.rlya.site/tags/yolov8/"},{"name":"Python","slug":"Python","permalink":"http://www.rlya.site/tags/Python/"},{"name":"Miscellaneous","slug":"Miscellaneous","permalink":"http://www.rlya.site/tags/Miscellaneous/"},{"name":"Centos","slug":"Centos","permalink":"http://www.rlya.site/tags/Centos/"}]}